version: "3"
services:

  nginx:
    container_name: nginx
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
#    restart: always
    environment:
      TZ: "$TZ"
    networks:
      - default

  mysql:
    container_name: mysql
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
#    restart: always
    stdin_open: true
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"
    networks:
      - default

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
#    restart: always
    environment:
      TZ: "$TZ"
    networks:
      - default

  mongodb:
    container_name: mongodb
    image: mongo:${MONGODB_VERSION}
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${MONGODB_INITDB_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${MONGODB_INITDB_ROOT_PASSWORD}"
      TZ: "$TZ"
    volumes:
      - ${MONGODB_DATA_DIR}:/data/db:rw
      - ${MONGODB_DATA_DIR}/mongo_key:/mongo:rw
    ports:
      - "${MONGODB_HOST_PORT}:27017"
    networks:
      - default
    command:
      --auth

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:${RABBITMQ_VERSION}
    ports:
      - "${RABBITMQ_HOST_PORT_1}:5672"
      - "${RABBITMQ_HOST_PORT_2}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "${RABBITMQ_DEFAULT_USER}"
      RABBITMQ_DEFAULT_PASS: "${RABBITMQ_DEFAULT_PASS}"
      TZ: "$TZ"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
#    restart: always
    networks:
      - default

  php72:
    container_name: php72
    build:
      context: ./config/php/
      args:
        PHP_VERSION: ${PHP72_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP72_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php72.sh
        TZ: "$TZ"
    ports:
      - "${PHP72_HOST_PORT}:9000"
    links:
      - mysql
    depends_on:
      - mysql
      - redis
      - nginx
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  java14:
    container_name: java14
    build:
      context: ./config/java/
      args:
        JAVA_VERSION: ${JAVA14_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        TZ: "$TZ"
    ports:
      - "${JAVA14_HOST_PORT}:${JAVA14_HOST_PORT}" # 11000
    depends_on:
      - mysql
      - redis
      - nginx
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${JAVA14_LOG_DIR}:/var/log/java
    #    restart: always
    command:
      - /bin/sh
    cap_add:
      - SYS_PTRACE
    stdin_open: true
    tty: true
    networks:
      - default

  tomcat:
    container_name: tomcat
    build:
      context: ./config/tomcat/
      args:
        TOMCAT_VERSION: ${TOMCAT8_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        TZ: "$TZ"
    ports:
      - "${TOMCAT8_HOST_PORT}:${TOMCAT8_HOST_PORT}" # 11001
    depends_on:
      - mysql
      - redis
      - nginx
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${TOMCAT8_CONF_FILE}:/usr/local/tomcat/conf/server.xml  #映射 tomcat的配置文件到容器里
      - ${TOMCAT8_LOG_DIR}:/usr/local/tomcat/logs/
    #    restart: always
    command:
      - /bin/sh
    cap_add:
      - SYS_PTRACE
    stdin_open: true
    tty: true
    networks:
      - default

  node:
    container_name: node
    build:
      context: ./config/node/
      args:
        NODE_VERSION: ${NODE_VERSION}
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
#    restart: always
    cap_add:
      - SYS_PTRACE
    stdin_open: true
    tty: true
    environment:
      TZ: "$TZ"
    networks:
      - default

  go:
    container_name: go
    build:
      context: ./config/go/
      args:
        GO_VERSION: ${GO_VERSION}
    volumes:
      - ${GO_PATH}:/go/:rw
    stdin_open: true
    tty: true
    environment:
      TZ: "$TZ"
    networks:
      - default

  ubuntu:
    container_name: ubuntu
    build:
      context: ./config/ubuntu/
      args:
        UBUNTU_VERSION: ${UBUNTU_VERSION}
    ports:
      - "${UBUNTU_SSH}:22"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
#      - ${UBUNTU_SOURCE_LIST}:/etc/apt/sources.list:rw
    #    restart: always
#    command: ["/bin/bash","/usr/sbin/sshd", "-D"]
#      - /bin/bash
#      -   -c
#      - |
#        /start.sh
    stdin_open: true
    tty: true
    environment:
      TZ: "$TZ"
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  python3:
    container_name: python3
    build:
      context: ./config/python/
      args:
        PYTHON_VERSION: ${PYTHON3_VERSION}
        TZ: "$TZ"
    ports:
      - "${PYTHON3_HOST_PORT}:10000"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
    #    restart: always
    stdin_open: true
    tty: true
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mssql:
    image: microsoft/mssql-server-linux:2017-latest
    ports:
      - "1433:1433"
    container_name: mssql
    volumes:
      - ./data/mssql:/var/opt/mssql
      - ${UBUNTU_SOURCE_LIST}:/etc/apt/sources.list:rw
    privileged: true
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=a12345678.
      - TZ=Asia/Shanghai
    #    restart: always
    cap_add:
      - SYS_PTRACE
    stdin_open: true
    tty: true
    networks:
      - default

networks:
  default:


