version: "3"
services:

  nginx:
    container_name: nginx
    image: nginx:${NGINX_VERSION}
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    restart: always
    environment:
      TZ: "$TZ"
    networks:
      - default

  php72:
    container_name: php72
    build:
      context: ./config/php/
      args:
        PHP_VERSION: ${PHP72_VERSION}
        ALPINE_REPOSITORIES: ${ALPINE_REPOSITORIES}
        PHP_EXTENSIONS: ${PHP72_EXTENSIONS}
        MORE_EXTENSION_INSTALLER: php72.sh
        TZ: "$TZ"
    ports:
      - "${PHP72_HOST_PORT}:9000"
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
      - ${PHP72_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP72_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP72_LOG_DIR}:/var/log/php
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  mysql:
    container_name: mysql
    image: mysql:${MYSQL_VERSION}
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"
    networks:
      - default

  redis:
    container_name: redis
    image: redis:${REDIS_VERSION}
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default

  node:
    container_name: node
    build:
      context: ./config/node/
      args:
        NODE_VERSION: ${NODE_VERSION}
    volumes:
      - ${SOURCE_DIR}:/var/www/html/:rw
    restart: always
    cap_add:
      - SYS_PTRACE
    stdin_open: true
    tty: true
    environment:
      TZ: "$TZ"
    networks:
      - default

  go:
    container_name: go
    build:
      context: ./config/go/
      args:
        GO_VERSION: ${GO_VERSION}
    volumes:
      - ${GO_PATH}:/go/:rw
    stdin_open: true
    tty: true
    environment:
      TZ: "$TZ"
    networks:
      - default

networks:
  default:


